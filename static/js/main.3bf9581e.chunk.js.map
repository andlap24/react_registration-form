{"version":3,"sources":["components/RegistrationPage/RegistrationPage.jsx","images/close-button.svg","components/UserList/UserList.jsx","context.js","components/EditUser/EditUser.jsx","components/LoginPage/LoginPage.jsx","components/TestForm/TestForm.jsx","App.jsx","index.js"],"names":["RegistrationPage","useState","lastName","setLastName","firstName","setFirstName","patronymic","setPatronymic","position","setPosition","login","setLogin","password","setPassword","confirmPassword","setConfirmPassword","lastNameError","setLastNameError","firstNameError","setFirstNameError","loginError","setLoginError","passwordError","setPasswordError","addUserError","setAddUserError","onBlur","input","setter","resetForm","className","type","value","placeholder","onChange","event","target","name","required","onClick","localUser","localStorage","setItem","JSON","stringify","UserList","setModalWindow","Object","keys","role","tabIndex","onKeyPress","src","button","alt","map","user","userData","parse","getItem","SelectedUser","React","createContext","EditUser","selectedUser","useContext","console","log","getData","saveUserError","setSaveUserError","modalWindow","to","LoginPage","setSelectedUser","isPasswordValid","setIsPasswordValid","useEffect","resetState","checkPassword","pass","Provider","defaultValue","handleSelectedUser","length","key","handleKeyPress","TestForm","setInput","text","setText","saveText","App","path","component","render","ReactDOM","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.3bf9581e.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './RegistrationPage.scss';\n\nexport const RegistrationPage = () => {\n  const [lastName, setLastName] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [patronymic, setPatronymic] = useState('');\n  const [position, setPosition] = useState('');\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [lastNameError, setLastNameError] = useState(false);\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [loginError, setLoginError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [addUserError, setAddUserError] = useState(false);\n\n  const handleFormSubmit = () => {\n    const localUser = {\n      lastName,\n      firstName,\n      patronymic,\n      position,\n      login,\n      password,\n    };\n\n    if (password === confirmPassword && lastName !== '' && login !== '') {\n      localStorage.setItem(`${login}`, JSON.stringify(localUser));\n      resetForm();\n    }\n\n    if (loginError === true) {\n      setAddUserError(true);\n    }\n  };\n\n  const onBlur = (input, setter) => {\n    if (input === '') {\n      setter(true);\n    }\n  };\n\n  const resetForm = () => {\n    setLastName('');\n    setFirstName('');\n    setPatronymic('');\n    setPosition('');\n    setLogin('');\n    setPassword('');\n    setConfirmPassword('');\n    setLastNameError(false);\n    setFirstNameError(false);\n    setLoginError(false);\n    setPasswordError(false);\n    setAddUserError(false);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <form className=\"form\">\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={lastName}\n            placeholder=\"Фамилия*\"\n            onChange={event => setLastName(event.target.value)}\n            onBlur={() => onBlur(lastName, setLastNameError)}\n          />\n        </label>\n\n        {lastNameError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={firstName}\n            placeholder=\"Имя*\"\n            onChange={event => setFirstName(event.target.value)}\n            onBlur={() => onBlur(firstName, setFirstNameError)}\n          />\n        </label>\n\n        {firstNameError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"patronymic\"\n            className=\"form__input\"\n            value={patronymic}\n            placeholder=\"Отчество\"\n            onChange={event => setPatronymic(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={position}\n            placeholder=\"Должность\"\n            onChange={event => setPosition(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={login}\n            placeholder=\"Логин*\"\n            onChange={event => setLogin(event.target.value)}\n            onBlur={() => onBlur(login, setLoginError)}\n          />\n        </label>\n\n        {loginError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"password\"\n            className=\"form__input\"\n            value={password}\n            placeholder=\"Пароль*\"\n            onChange={event => setPassword(event.target.value)}\n            onBlur={() => onBlur(password, setPasswordError)}\n          />\n        </label>\n\n        {passwordError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"password\"\n            className=\"form__input\"\n            value={confirmPassword}\n            placeholder=\"Подтвердите пароль*\"\n            onChange={event => setConfirmPassword(event.target.value)}\n            required\n          />\n        </label>\n\n        {addUserError && (\n          <p className=\"login-form__message\">Заполните все обязательные поля</p>\n        )}\n\n        <button\n          className=\"form__btn\"\n          type=\"button\"\n          onClick={handleFormSubmit}\n        >\n          Добавить\n        </button>\n      </form>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/close-button.63feaaed.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './UserList.scss';\n\nimport button from '../../images/close-button.svg';\n\nexport const UserList = ({ setModalWindow }) => {\n  const localUser = Object.keys(localStorage);\n\n  return (\n    <>\n      <div className=\"modal-overlay\" />\n      <div className=\"modal\">\n        <div\n          className=\"modal__close-button\"\n          role=\"button\"\n          onClick={() => setModalWindow(false)}\n          tabIndex=\"0\"\n          onKeyPress={() => setModalWindow(false)}\n        >\n          <img\n            src={button}\n            alt=\"close button\"\n          />\n        </div>\n        {localUser.map((user) => {\n          const userData = JSON.parse(localStorage.getItem(user));\n\n          return (\n            <div className=\"modal__user-list list\">\n              <p className=\"list__item\">\n                <b>Логин:&nbsp;</b>\n                {userData.login}\n              </p>\n              <p className=\"list__item\">\n                <b>Фамилия:&nbsp;</b>\n                {userData.lastName}\n              </p>\n              <p className=\"list__item\">\n                <b>Имя:&nbsp;</b>\n                {userData.firstName}\n              </p>\n              <p className=\"list__item\">\n                <b>Отчество:&nbsp;</b>\n                {userData.patronymic}\n              </p>\n              <p className=\"list__item\">\n                <b>Должность:&nbsp;</b>\n                {userData.position}\n              </p>\n              <p className=\"list__item\">\n                <b>Пароль:&nbsp;</b>\n                {userData.password}\n              </p>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nUserList.propTypes = {\n  setModalWindow: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nexport const SelectedUser = React.createContext();\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './EditUser.scss';\n\nimport { UserList } from '../UserList';\nimport { SelectedUser } from '../../context';\n\nexport const EditUser = () => {\n  const selectedUser = useContext(SelectedUser);\n\n  // eslint-disable-next-line no-console\n  console.log(selectedUser);\n  const getData = (value) => {\n    const data = JSON.parse(localStorage.getItem('andlap'));\n\n    return data[value];\n  };\n\n  const [lastName, setLastName] = useState(getData('lastName'));\n  const [firstName, setFirstName] = useState(getData('firstName'));\n  const [patronymic, setPatronymic] = useState(getData('patronymic'));\n  const [position, setPosition] = useState(getData('position'));\n  const [login, setLogin] = useState(getData('login'));\n  const [password, setPassword] = useState(getData('password'));\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [lastNameError, setLastNameError] = useState(false);\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [loginError, setLoginError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [saveUserError, setSaveUserError] = useState(false);\n  const [modalWindow, setModalWindow] = useState(false);\n\n  const handleFormSubmit = () => {\n    const localUser = {\n      lastName,\n      firstName,\n      patronymic,\n      position,\n      login,\n      password,\n    };\n\n    if (password === confirmPassword && lastName !== '' && login !== '') {\n      localStorage.setItem(`${login}`, JSON.stringify(localUser));\n    }\n\n    if (loginError === true) {\n      setSaveUserError(true);\n    }\n  };\n\n  const displayUsersList = () => (\n    setModalWindow(true)\n  );\n\n  const onBlur = (input, setter) => {\n    if (input === '') {\n      setter(true);\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div>\n        <nav className=\"nav\">\n          <Link to=\"/\">\n            <button className=\"nav__link\" type=\"button\">Вход</button>\n          </Link>\n          <Link to=\"/registration\">\n            <button className=\"nav__link\" type=\"button\">Регистрация</button>\n          </Link>\n          <button\n            className=\"nav__link\"\n            type=\"button\"\n            onClick={displayUsersList}\n          >\n            Пользователи\n          </button>\n          <Link to=\"/form\">\n            <button className=\"nav__link\" type=\"button\">Форма</button>\n          </Link>\n        </nav>\n      </div>\n\n      {modalWindow && (\n        <UserList setModalWindow={setModalWindow} />\n      )}\n\n      <form className=\"form\">\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={lastName}\n            onChange={event => setLastName(event.target.value)}\n            onBlur={() => onBlur(lastName, setLastNameError)}\n          />\n        </label>\n\n        {lastNameError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={firstName}\n            onChange={event => setFirstName(event.target.value)}\n            onBlur={() => onBlur(firstName, setFirstNameError)}\n          />\n        </label>\n\n        {firstNameError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"patronymic\"\n            className=\"form__input\"\n            value={patronymic}\n            onChange={event => setPatronymic(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={position}\n            onChange={event => setPosition(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={login}\n            onChange={event => setLogin(event.target.value)}\n            onBlur={() => onBlur(login, setLoginError)}\n          />\n        </label>\n\n        {loginError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"password\"\n            className=\"form__input\"\n            value={password}\n            onChange={event => setPassword(event.target.value)}\n            onBlur={() => onBlur(password, setPasswordError)}\n          />\n        </label>\n\n        {passwordError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"password\"\n            className=\"form__input\"\n            value={confirmPassword}\n            placeholder=\"Подтвердите пароль*\"\n            onChange={event => setConfirmPassword(event.target.value)}\n            required\n          />\n        </label>\n\n        {saveUserError && (\n          <p className=\"login-form__message\">Заполните все обязательные поля</p>\n        )}\n\n        <button\n          className=\"form__btn\"\n          type=\"button\"\n          onClick={handleFormSubmit}\n        >\n          Добавить\n        </button>\n      </form>\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport './LoginPage.scss';\n\nimport { SelectedUser } from '../../context';\n\nexport const LoginPage = () => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [password, setPassword] = useState('');\n  const [isPasswordValid, setIsPasswordValid] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const localUser = Object.keys(localStorage);\n\n  useEffect(() => {\n    resetState();\n  }, []);\n\n  const checkPassword = () => {\n    const pass = JSON.parse(localStorage.getItem(selectedUser)).password;\n\n    password === pass ? setIsPasswordValid(true) : setIsPasswordValid(false);\n  };\n\n  const handleSelectedUser = event => (\n    setSelectedUser(event.target.value)\n  );\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      checkPassword();\n    }\n  };\n\n  const onBlur = (input) => {\n    if (input === '') {\n      setPasswordError(true);\n    }\n  };\n\n  const resetState = () => {\n    setIsPasswordValid(false);\n    /* setSelectedUser(''); */\n    setPassword('');\n  };\n\n  return (\n    <SelectedUser.Provider value={selectedUser}>\n      <div className=\"login-page\">\n        <form\n          className=\"login-page__form login-form\"\n        >\n          <select\n            className=\"login-form__select\"\n            defaultValue=\"Choose a user\"\n            onChange={(event) => {\n              handleSelectedUser(event);\n            }}\n          >\n            <option value=\"Choose a user\">Выберите пользователя</option>\n            {localUser.length > 0\n              && localUser.map(user => (\n                <option\n                  key={user}\n                  value={user}\n                >\n                  {user}\n                </option>\n              ))}\n          </select>\n\n          {localUser.length > 0\n          && (\n            <label>\n              <input\n                className=\"login-form__password\"\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                placeholder=\"Пароль\"\n                onChange={event => setPassword(event.target.value)}\n                onKeyPress={event => handleKeyPress(event)}\n                onBlur={() => onBlur(password)}\n              />\n            </label>\n          )}\n\n          {passwordError && (\n            <p className=\"login-form__message\">Введите пароль</p>\n          )}\n\n          {localUser.length > 0 || isPasswordValid\n            ? (\n              <Link to=\"/edituser\">\n                <button\n                  className=\"login-form__btn\"\n                  type=\"button\"\n                  onClick={checkPassword}\n                >\n                  Войти\n                </button>\n              </Link>\n            )\n            : (\n              <Link to=\"/registration\">\n                <button\n                  className=\"form__btn\"\n                  type=\"button\"\n                >\n                  Регистрация\n                </button>\n              </Link>\n            )\n          }\n        </form>\n\n        {isPasswordValid\n          && (\n            <Redirect to=\"/registration\" />\n          )\n        }\n      </div>\n    </SelectedUser.Provider>\n  );\n};\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './TestForm.scss';\n\nexport const TestForm = () => {\n  const [input, setInput] = useState('');\n  const [text, setText] = useState(' ');\n\n  const saveText = (event) => {\n    setInput(event.target.value);\n  };\n\n  const displayText = (textFromFrom) => {\n    setText(textFromFrom);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setInput('');\n  };\n\n  return (\n    <>\n      <div className=\"test-form form\">\n        <h2 className=\"test-form__title\">{`Text: ${text}`}</h2>\n        <input\n          type=\"text\"\n          className=\"form__input\"\n          placeholder=\"Введите текст\"\n          value={input}\n          onChange={event => saveText(event)}\n        />\n        <button\n          type=\"button\"\n          className=\"form__btn\"\n          onClick={() => displayText(input)}\n        >\n          Отобразить\n        </button>\n\n        <Link to=\"/registration\">\n          <button\n            type=\"button\"\n            className=\"form__return-btn\"\n          >\n            Назад\n          </button>\n        </Link>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { RegistrationPage } from './components/RegistrationPage';\nimport { EditUser } from './components/EditUser';\nimport { LoginPage } from './components/LoginPage';\nimport { TestForm } from './components/TestForm';\n\nexport const App = () => (\n  <Switch>\n    <Route path=\"/registration\" component={RegistrationPage} />\n    <Route path=\"/edituser\" component={EditUser} />\n    <Route path=\"/form\" component={TestForm} />\n    <Route path=\"/\" component={LoginPage} />\n    <Route render={() => <h1>404: page not found</h1>} />\n  </Switch>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}