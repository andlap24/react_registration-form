{"version":3,"sources":["images/close-button.svg","components/UserList/UserList.jsx","components/RegistrationPage/RegistrationPage.jsx","components/LoginPage/LoginPage.jsx","components/TestForm/TestForm.jsx","App.jsx","index.js"],"names":["UserList","setModalWindow","localUser","Object","keys","localStorage","className","role","onClick","tabIndex","onKeyPress","src","button","alt","map","user","userData","JSON","parse","getItem","login","lastName","firstName","patronymic","position","password","RegistrationPage","useState","setLastName","setFirstName","setPatronymic","setPosition","setLogin","setPassword","confirmPassword","setConfirmPassword","modalWindow","lastNameError","setLastNameError","firstNameError","setFirstNameError","loginError","setLoginError","passwordError","setPasswordError","addUserError","setAddUserError","onBlur","input","setter","resetForm","to","type","value","placeholder","onChange","event","target","name","required","setItem","stringify","LoginPage","selectedUser","setSelectedUser","isPasswordValid","setIsPasswordValid","useEffect","resetState","checkPassword","pass","defaultValue","handleSelectedUser","length","key","handleKeyPress","TestForm","setInput","text","setText","saveText","App","path","component","render","ReactDOM","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.240cfa33.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/close-button.63feaaed.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './UserList.scss';\n\nimport button from '../../images/close-button.svg';\n\nexport const UserList = ({ setModalWindow }) => {\n  const localUser = Object.keys(localStorage);\n\n  return (\n    <>\n      <div className=\"modal-overlay\" />\n      <div className=\"modal\">\n        <div\n          className=\"modal__close-button\"\n          role=\"button\"\n          onClick={() => setModalWindow(false)}\n          tabIndex=\"0\"\n          onKeyPress={() => setModalWindow(false)}\n        >\n          <img\n            src={button}\n            alt=\"close button\"\n          />\n        </div>\n        {localUser.map((user) => {\n          const userData = JSON.parse(localStorage.getItem(user));\n\n          return (\n            <div className=\"modal__user-list list\">\n              <p className=\"list__item\">\n                <b>Логин:&nbsp;</b>\n                {userData.login}\n              </p>\n              <p className=\"list__item\">\n                <b>Фамилия:&nbsp;</b>\n                {userData.lastName}\n              </p>\n              <p className=\"list__item\">\n                <b>Имя:&nbsp;</b>\n                {userData.firstName}\n              </p>\n              <p className=\"list__item\">\n                <b>Отчество:&nbsp;</b>\n                {userData.patronymic}\n              </p>\n              <p className=\"list__item\">\n                <b>Должность:&nbsp;</b>\n                {userData.position}\n              </p>\n              <p className=\"list__item\">\n                <b>Пароль:&nbsp;</b>\n                {userData.password}\n              </p>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nUserList.propTypes = {\n  setModalWindow: PropTypes.func.isRequired,\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './RegistrationPage.scss';\n\nimport { UserList } from '../UserList';\n\nexport const RegistrationPage = () => {\n  const [lastName, setLastName] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [patronymic, setPatronymic] = useState('');\n  const [position, setPosition] = useState('');\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [modalWindow, setModalWindow] = useState(false);\n\n  const [lastNameError, setLastNameError] = useState(false);\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [loginError, setLoginError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [addUserError, setAddUserError] = useState(false);\n\n  const handleFormSubmit = () => {\n    const localUser = {\n      lastName,\n      firstName,\n      patronymic,\n      position,\n      login,\n      password,\n    };\n\n    if (password === confirmPassword && lastName !== '' && login !== '') {\n      localStorage.setItem(`${login}`, JSON.stringify(localUser));\n      resetForm();\n    }\n\n    setAddUserError(true);\n  };\n\n  const displayUsersList = () => (\n    setModalWindow(true)\n  );\n\n  const onBlur = (input, setter) => {\n    if (input === '') {\n      setter(true);\n    }\n  };\n\n  const resetForm = () => {\n    setLastName('');\n    setFirstName('');\n    setPatronymic('');\n    setPosition('');\n    setLogin('');\n    setPassword('');\n    setConfirmPassword('');\n    setLastNameError(false);\n    setFirstNameError(false);\n    setLoginError(false);\n    setPasswordError(false);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div>\n        <nav className=\"nav\">\n          <Link to=\"/\">\n            <button className=\"nav__link\" type=\"button\">Вход</button>\n          </Link>\n          <Link to=\"/registration\">\n            <button className=\"nav__link\" type=\"button\">Регистрация</button>\n          </Link>\n          <button\n            className=\"nav__link\"\n            type=\"button\"\n            onClick={displayUsersList}\n          >\n            Пользователи\n          </button>\n          <Link to=\"/form\">\n            <button className=\"nav__link\" type=\"button\">Форма</button>\n          </Link>\n        </nav>\n      </div>\n\n      {modalWindow && (\n        <UserList setModalWindow={setModalWindow} />\n      )}\n\n      <form className=\"form\">\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={lastName}\n            placeholder=\"Фамилия*\"\n            onChange={event => setLastName(event.target.value)}\n            onBlur={() => onBlur(lastName, setLastNameError)}\n          />\n        </label>\n\n        {lastNameError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={firstName}\n            placeholder=\"Имя*\"\n            onChange={event => setFirstName(event.target.value)}\n            onBlur={() => onBlur(firstName, setFirstNameError)}\n          />\n        </label>\n\n        {firstNameError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"patronymic\"\n            className=\"form__input\"\n            value={patronymic}\n            placeholder=\"Отчество\"\n            onChange={event => setPatronymic(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={position}\n            placeholder=\"Должность\"\n            onChange={event => setPosition(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={login}\n            placeholder=\"Логин*\"\n            onChange={event => setLogin(event.target.value)}\n            onBlur={() => onBlur(login, setLoginError)}\n          />\n        </label>\n\n        {loginError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"password\"\n            className=\"form__input\"\n            value={password}\n            placeholder=\"Пароль*\"\n            onChange={event => setPassword(event.target.value)}\n            onBlur={() => onBlur(password, setPasswordError)}\n          />\n        </label>\n\n        {passwordError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"password\"\n            className=\"form__input\"\n            value={confirmPassword}\n            placeholder=\"Подтвердите пароль*\"\n            onChange={event => setConfirmPassword(event.target.value)}\n            required\n          />\n        </label>\n\n        {addUserError && (\n          <p className=\"login-form__message\">Заполните все обязательные поля</p>\n        )}\n\n        <button\n          className=\"form__btn\"\n          type=\"button\"\n          onClick={handleFormSubmit}\n        >\n          Добавить\n        </button>\n      </form>\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport './LoginPage.scss';\n\nexport const LoginPage = () => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [password, setPassword] = useState('');\n  const [isPasswordValid, setIsPasswordValid] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const localUser = Object.keys(localStorage);\n\n  useEffect(() => {\n    resetState();\n  }, []);\n\n  const checkPassword = () => {\n    const pass = JSON.parse(localStorage.getItem(selectedUser)).password;\n\n    password === pass ? setIsPasswordValid(true) : setIsPasswordValid(false);\n  };\n\n  const handleSelectedUser = event => (\n    setSelectedUser(event.target.value)\n  );\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      checkPassword();\n    }\n  };\n\n  const onBlur = (input) => {\n    if (input === '') {\n      setPasswordError(true);\n    }\n  };\n\n  const resetState = () => {\n    setIsPasswordValid(false);\n    setSelectedUser('');\n    setPassword('');\n  };\n\n  return (\n    <div className=\"login-page\">\n      <form\n        className=\"login-page__form login-form\"\n      >\n        <select\n          className=\"login-form__select\"\n          defaultValue=\"Choose a user\"\n          onChange={(event) => {\n            handleSelectedUser(event);\n          }}\n        >\n          <option value=\"Choose a user\">Выберите пользователя</option>\n          {localUser.length > 0\n            && localUser.map(user => (\n              <option\n                key={user}\n                value={user}\n              >\n                {user}\n              </option>\n            ))}\n        </select>\n\n        {localUser.length > 0\n        && (\n          <label>\n            <input\n              className=\"login-form__password\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              placeholder=\"Пароль\"\n              onChange={event => setPassword(event.target.value)}\n              onKeyPress={event => handleKeyPress(event)}\n              onBlur={() => onBlur(password)}\n            />\n          </label>\n        )}\n\n        {passwordError && (\n          <p className=\"login-form__message\">Введите пароль</p>\n        )}\n\n        {localUser.length > 0 || isPasswordValid\n          ? (\n            <Link to=\"/\">\n              <button\n                className=\"login-form__btn\"\n                type=\"button\"\n                onClick={checkPassword}\n              >\n                Войти\n              </button>\n            </Link>\n          )\n          : (\n            <Link to=\"/registration\">\n              <button\n                className=\"form__btn\"\n                type=\"button\"\n              >\n                Регистрация\n              </button>\n            </Link>\n          )\n        }\n      </form>\n\n      {isPasswordValid\n        && (\n          <Redirect to=\"/registration\" />\n        )\n      }\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './TestForm.scss';\n\nexport const TestForm = () => {\n  const [input, setInput] = useState('');\n  const [text, setText] = useState(' ');\n\n  const saveText = (event) => {\n    setInput(event.target.value);\n  };\n\n  const displayText = (textFromFrom) => {\n    setText(textFromFrom);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setInput('');\n  };\n\n  return (\n    <>\n      <div className=\"test-form form\">\n        <h2 className=\"test-form__title\">{`Text: ${text}`}</h2>\n        <input\n          type=\"text\"\n          className=\"form__input\"\n          placeholder=\"Введите текст\"\n          value={input}\n          onChange={event => saveText(event)}\n        />\n        <button\n          type=\"button\"\n          className=\"form__btn\"\n          onClick={() => displayText(input)}\n        >\n          Отобразить\n        </button>\n\n        <Link to=\"/registration\">\n          <button\n            type=\"button\"\n            className=\"form__return-btn\"\n          >\n            Назад\n          </button>\n        </Link>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { RegistrationPage } from './components/RegistrationPage';\nimport { UserList } from './components/UserList';\nimport { LoginPage } from './components/LoginPage';\nimport { TestForm } from './components/TestForm';\n\nexport const App = () => (\n  <Switch>\n    <Route path=\"/registration\" component={RegistrationPage} />\n    <Route path=\"/userlist\" component={UserList} />\n    <Route path=\"/form\" component={TestForm} />\n    <Route path=\"/\" component={LoginPage} />\n    <Route render={() => <h1>404: page not found</h1>} />\n  </Switch>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}