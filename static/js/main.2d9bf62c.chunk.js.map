{"version":3,"sources":["images/close-button.svg","components/UserList/UserList.jsx","components/RegistrationPage/RegistrationPage.jsx","components/LoginPage/LoginPage.jsx","App.jsx","index.js"],"names":["UserList","setModalWindow","localUser","Object","keys","localStorage","className","role","onClick","tabIndex","onKeyPress","src","button","alt","map","user","userData","JSON","parse","getItem","lastName","firstName","patronymic","position","login","password","RegistrationPage","useState","setLastName","setFirstName","setPatronymic","setPosition","setLogin","setPassword","confirmPassword","setConfirmPassword","modalWindow","to","type","value","placeholder","onChange","event","target","required","name","setItem","stringify","LoginPage","selectedUser","setSelectedUser","isPasswordValid","setIsPasswordValid","useEffect","checkPassword","console","log","pass","defaultValue","handleSelectedUser","length","key","handleKeyPress","App","path","component","render","ReactDOM","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.2d9bf62c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/close-button.63feaaed.svg\";","/* eslint-disable no-console */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport './UserList.scss';\n\nimport button from '../../images/close-button.svg';\n\nexport const UserList = ({ setModalWindow }) => {\n  const localUser = Object.keys(localStorage);\n\n  return (\n    <>\n      <div className=\"modal-overlay\" />\n      <div className=\"modal\">\n        <div\n          className=\"modal__close-button\"\n          role=\"button\"\n          onClick={() => setModalWindow(false)}\n          tabIndex=\"0\"\n          onKeyPress={() => setModalWindow(false)}\n        >\n          <img\n            src={button}\n            alt=\"close button\"\n          />\n        </div>\n        {localUser.map((user) => {\n          const userData = JSON.parse(localStorage.getItem(user));\n\n          return (\n            <div className=\"modal__user-list list\">\n              <p className=\"list__item\">\n                <b>Фамилия:&nbsp;</b>\n                {userData.lastName}\n              </p>\n              <p className=\"list__item\">\n                <b>Имя:&nbsp;</b>\n                {userData.firstName}\n              </p>\n              <p className=\"list__item\">\n                <b>Отчество:&nbsp;</b>\n                {userData.patronymic}\n              </p>\n              <p className=\"list__item\">\n                <b>Должность:&nbsp;</b>\n                {userData.position}\n              </p>\n              <p className=\"list__item\">\n                <b>Логин:&nbsp;</b>\n                {userData.login}\n              </p>\n              <p className=\"list__item\">\n                <b>Пароль:&nbsp;</b>\n                {userData.password}\n              </p>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './RegistrationPage.scss';\n\nimport { UserList } from '../UserList';\n\nexport const RegistrationPage = () => {\n  const [lastName, setLastName] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [patronymic, setPatronymic] = useState('');\n  const [position, setPosition] = useState('');\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [modalWindow, setModalWindow] = useState(false);\n\n  const handleFormSubmit = () => {\n    const localUser = {\n      lastName,\n      firstName,\n      patronymic,\n      position,\n      login,\n      password,\n    };\n\n    localStorage.setItem(`${login}`, JSON.stringify(localUser));\n  };\n\n  const displayUsersList = () => (\n    setModalWindow(true)\n  );\n\n  return (\n    <div className=\"wrapper\">\n      <div>\n        <nav className=\"nav\">\n          <Link to=\"/\">\n            <button className=\"nav__link\" type=\"button\">Вход</button>\n          </Link>\n          <Link to=\"/registration\">\n            <button className=\"nav__link\" type=\"button\">Регистрация</button>\n          </Link>\n          <button\n            className=\"nav__link\"\n            type=\"button\"\n            onClick={displayUsersList}\n          >\n            Пользователи\n          </button>\n        </nav>\n      </div>\n\n      {modalWindow && (\n        <UserList setModalWindow={setModalWindow} />\n      )}\n\n      <form className=\"form\">\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={lastName}\n            placeholder=\"Фамилия\"\n            onChange={event => setLastName(event.target.value)}\n            required\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={firstName}\n            placeholder=\"Имя\"\n            onChange={event => setFirstName(event.target.value)}\n            required\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"patronymic\"\n            className=\"form__input\"\n            value={patronymic}\n            placeholder=\"Отчество\"\n            onChange={event => setPatronymic(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={position}\n            placeholder=\"Должность\"\n            onChange={event => setPosition(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={login}\n            placeholder=\"Логин\"\n            onChange={event => setLogin(event.target.value)}\n            required\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"password\"\n            className=\"form__input\"\n            value={password}\n            placeholder=\"Пароль\"\n            onChange={event => setPassword(event.target.value)}\n            required\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"password\"\n            className=\"form__input\"\n            value={confirmPassword}\n            placeholder=\"Подтвердите пароль\"\n            onChange={event => setConfirmPassword(event.target.value)}\n            required\n          />\n        </label>\n\n        <button\n          className=\"form__btn\"\n          type=\"button\"\n          onClick={handleFormSubmit}\n        >\n          Добавить\n        </button>\n      </form>\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport './LoginPage.scss';\n\nexport const LoginPage = () => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [password, setPassword] = useState('');\n  const [isPasswordValid, setIsPasswordValid] = useState(false);\n  const localUser = Object.keys(localStorage);\n\n  useEffect(() => {\n    setIsPasswordValid(false);\n    setSelectedUser('');\n    setPassword('');\n  }, []);\n\n  const checkPassword = () => {\n    console.log(selectedUser);\n\n    const pass = JSON.parse(localStorage.getItem(selectedUser)).password;\n\n    console.log(JSON.parse(localStorage.getItem(selectedUser)).password);\n\n    password === pass ? setIsPasswordValid(true) : setIsPasswordValid(false);\n  };\n\n  const handleSelectedUser = event => (\n    setSelectedUser(event.target.value)\n  );\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      checkPassword();\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      <form\n        className=\"login-page__form login-form\"\n      >\n        <select\n          className=\"login-form__select\"\n          defaultValue=\"Choose a user\"\n          onChange={(event) => {\n            handleSelectedUser(event);\n          }}\n        >\n          <option value=\"Choose a user\">Choose a user</option>\n          {localUser.length > 0\n            && localUser.map(user => (\n              <option\n                key={user}\n                value={user}\n              >\n                {user}\n              </option>\n            ))}\n        </select>\n\n        <label>\n          <input\n            className=\"login-form__password\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            onChange={event => setPassword(event.target.value)}\n            onKeyPress={event => handleKeyPress(event)}\n            required\n          />\n        </label>\n\n        {localUser.length > 0 || isPasswordValid\n          ? (\n            <Link to=\"/\">\n              <button\n                className=\"login-form__btn\"\n                type=\"button\"\n                onClick={checkPassword}\n              >\n                Войти\n              </button>\n            </Link>\n          )\n          : (\n            <Link to=\"/registration\">\n              <button\n                className=\"form__btn\"\n                type=\"button\"\n              >\n                Регистрация\n              </button>\n            </Link>\n          )\n        }\n      </form>\n\n      {isPasswordValid\n        && (\n          <Redirect to=\"/registration\" />\n        )\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { RegistrationPage } from './components/RegistrationPage';\nimport { UserList } from './components/UserList';\nimport { LoginPage } from './components/LoginPage';\n\nexport const App = () => (\n  <Switch>\n    <Route path=\"/registration\" component={RegistrationPage} />\n    <Route path=\"/userlist\" component={UserList} />\n    <Route path=\"/\" component={LoginPage} />\n    <Route render={() => <h1>404: page not found</h1>} />\n  </Switch>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}