{"version":3,"sources":["components/MainNav/MainNav.jsx","components/LoginPage/LoginPage.jsx","components/RegistrationPage/RegistrationPage.jsx","components/EditUser/EditUser.jsx","components/UserList/UserList.jsx","components/TestForm/TestForm.jsx","App.jsx","index.js"],"names":["MainNav","className","to","activeClassName","exact","LoginPage","useState","selectedUser","setSelectedUser","password","setPassword","isPasswordValid","setIsPasswordValid","passwordError","setPasswordError","localUser","Object","keys","localStorage","useEffect","resetState","checkPassword","pass","JSON","parse","getItem","sessionStorage","setItem","defaultValue","onChange","event","target","value","handleSelectedUser","length","map","user","type","name","placeholder","onKeyPress","key","handleKeyPress","onBlur","onClick","RegistrationPage","lastName","setLastName","firstName","setFirstName","patronymic","setPatronymic","position","setPosition","login","setLogin","confirmPassword","setConfirmPassword","lastNameError","setLastNameError","firstNameError","setFirstNameError","loginError","setLoginError","addUserError","setAddUserError","input","setter","resetForm","required","stringify","EditUser","saveUserError","setSaveUserError","getData","disabled","UserList","setIsUserDeleted","userData","clear","TestForm","setInput","text","setText","saveText","App","path","component","render","ReactDOM","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.29e4ac37.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './MainNav.scss';\n\nexport const MainNav = () => (\n  <nav className=\"navbar\">\n    <div className=\"navbar-menu\">\n      <div className=\"navbar-start\">\n        <NavLink\n          to=\"/profile\"\n          className=\"navbar-item is-tab\"\n          activeClassName=\"is-active\"\n        >\n          Мой профиль\n        </NavLink>\n\n        <NavLink\n          to=\"/userlist\"\n          className=\"navbar-item is-tab\"\n          activeClassName=\"is-active\"\n        >\n          Пользователи\n        </NavLink>\n\n        <NavLink\n          to=\"/form\"\n          className=\"navbar-item is-tab\"\n          activeClassName=\"is-active\"\n        >\n          Форма\n        </NavLink>\n      </div>\n\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n          <div className=\"buttons\">\n            <NavLink\n              to=\"/login\"\n              className=\"button is-link\"\n              activeClassName=\"is-active\"\n            >\n              Регистрация\n            </NavLink>\n\n            <NavLink\n              to=\"/\"\n              exact\n              className=\"button is-light\"\n              activeClassName=\"is-active\"\n            >\n              Вход\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport './LoginPage.scss';\n\nexport const LoginPage = () => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [password, setPassword] = useState('');\n  const [isPasswordValid, setIsPasswordValid] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const localUser = Object.keys(localStorage);\n\n  useEffect(() => {\n    resetState();\n  }, []);\n\n  const checkPassword = () => {\n    const pass = JSON.parse(localStorage.getItem(selectedUser)).password;\n\n    password === pass ? setIsPasswordValid(true) : setIsPasswordValid(false);\n\n    sessionStorage.setItem('selectedUser', selectedUser);\n  };\n\n  const handleSelectedUser = event => (\n    setSelectedUser(event.target.value)\n  );\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      checkPassword();\n    }\n  };\n\n  const onBlur = (input) => {\n    if (input === '') {\n      setPasswordError(true);\n    }\n  };\n\n  const resetState = () => {\n    setIsPasswordValid(false);\n    setSelectedUser('');\n    setPassword('');\n  };\n\n  return (\n    <div className=\"login-page\">\n      <form\n        className=\"login-page__form login-form\"\n      >\n        <select\n          className=\"login-form__select\"\n          defaultValue=\"Choose a user\"\n          onChange={(event) => {\n            handleSelectedUser(event);\n          }}\n        >\n          <option value=\"Choose a user\">Выберите пользователя</option>\n          {localUser.length > 0\n              && localUser.map(user => (\n                <option\n                  key={user}\n                  value={user}\n                >\n                  {user}\n                </option>\n              ))}\n        </select>\n\n        {localUser.length > 0\n          && (\n            <label>\n              <input\n                className=\"login-form__password\"\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                placeholder=\"Пароль\"\n                onChange={event => setPassword(event.target.value)}\n                onKeyPress={event => handleKeyPress(event)}\n                onBlur={() => onBlur(password)}\n              />\n            </label>\n          )}\n\n        {passwordError && (\n          <p className=\"login-form__message\">Введите пароль</p>\n        )}\n\n        {isPasswordValid && (\n          <p className=\"login-form__message\">Неверный пароль</p>\n        )}\n\n        {localUser.length > 0\n          ? (\n            <button\n              className=\"login-form__btn\"\n              type=\"button\"\n              onClick={checkPassword}\n            >\n              Войти\n            </button>\n          )\n          : (\n            <Link to=\"/login\">\n              <button\n                className=\"form__btn\"\n                type=\"button\"\n              >\n                Регистрация\n              </button>\n            </Link>\n          )\n        }\n      </form>\n      {isPasswordValid\n        && (\n          <Redirect to={`/profile/:${selectedUser}`} />\n        )\n      }\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './RegistrationPage.scss';\n\nexport const RegistrationPage = () => {\n  const [lastName, setLastName] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [patronymic, setPatronymic] = useState('');\n  const [position, setPosition] = useState('');\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [lastNameError, setLastNameError] = useState(false);\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [loginError, setLoginError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [addUserError, setAddUserError] = useState(false);\n\n  const handleFormSubmit = () => {\n    const localUser = {\n      lastName,\n      firstName,\n      patronymic,\n      position,\n      login,\n      password,\n    };\n\n    if (password === confirmPassword && lastName !== '' && login !== '') {\n      localStorage.setItem(`${login}`, JSON.stringify(localUser));\n      resetForm();\n    }\n\n    if (loginError === true) {\n      setAddUserError(true);\n    }\n  };\n\n  const onBlur = (input, setter) => {\n    if (input === '') {\n      setter(true);\n    }\n  };\n\n  const addTestUser = () => {\n    setLastName('Dumbledore');\n    setFirstName('Albus');\n    setPatronymic('Percival Wulfric Brian');\n    setPosition('Headmaster of Hogwarts School');\n    setLogin('Dumbly-dorr');\n    setPassword('123');\n    setConfirmPassword('123');\n  };\n\n  const resetForm = () => {\n    setLastName('');\n    setFirstName('');\n    setPatronymic('');\n    setPosition('');\n    setLogin('');\n    setPassword('');\n    setConfirmPassword('');\n    setLastNameError(false);\n    setFirstNameError(false);\n    setLoginError(false);\n    setPasswordError(false);\n    setAddUserError(false);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <form className=\"form\">\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={lastName}\n            placeholder=\"Фамилия*\"\n            onChange={event => setLastName(event.target.value)}\n            onBlur={() => onBlur(lastName, setLastNameError)}\n          />\n        </label>\n\n        {lastNameError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={firstName}\n            placeholder=\"Имя*\"\n            onChange={event => setFirstName(event.target.value)}\n            onBlur={() => onBlur(firstName, setFirstNameError)}\n          />\n        </label>\n\n        {firstNameError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"patronymic\"\n            className=\"form__input\"\n            value={patronymic}\n            placeholder=\"Отчество\"\n            onChange={event => setPatronymic(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={position}\n            placeholder=\"Должность\"\n            onChange={event => setPosition(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={login}\n            placeholder=\"Логин*\"\n            onChange={event => setLogin(event.target.value)}\n            onBlur={() => onBlur(login, setLoginError)}\n          />\n        </label>\n\n        {loginError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"password\"\n            className=\"form__input\"\n            value={password}\n            placeholder=\"Пароль*\"\n            onChange={event => setPassword(event.target.value)}\n            onBlur={() => onBlur(password, setPasswordError)}\n          />\n        </label>\n\n        {passwordError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={confirmPassword}\n            placeholder=\"Подтвердите пароль*\"\n            onChange={event => setConfirmPassword(event.target.value)}\n            required\n          />\n        </label>\n\n        {addUserError && (\n          <p className=\"login-form__message\">Заполните все обязательные поля</p>\n        )}\n\n        <Link to=\"/\">\n          <button\n            className=\"form__btn\"\n            type=\"button\"\n            onClick={handleFormSubmit}\n          >\n            Добавить\n          </button>\n        </Link>\n        <button\n          className=\"form__btn\"\n          type=\"button\"\n          onClick={addTestUser}\n        >\n          Test user\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './EditUser.scss';\n\nexport const EditUser = () => {\n  const selectedUser = sessionStorage.getItem('selectedUser');\n  const [lastName, setLastName] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [patronymic, setPatronymic] = useState('');\n  const [position, setPosition] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [lastNameError, setLastNameError] = useState(false);\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [saveUserError, setSaveUserError] = useState(false);\n\n  useEffect(() => {\n    setLastName(getData('lastName'));\n    setFirstName(getData('firstName'));\n    setPassword(getData('password'));\n  }, []);\n\n  const getData = (value) => {\n    const data = JSON.parse(localStorage.getItem(selectedUser));\n\n    return data[value];\n  };\n\n  const handleFormSubmit = () => {\n    const localUser = {\n      lastName,\n      firstName,\n      patronymic,\n      position,\n      password,\n    };\n\n    if (password === confirmPassword && lastName !== '') {\n      const login = getData('login');\n\n      localStorage.setItem(`${login}`, JSON.stringify(localUser));\n    }\n\n    if (lastNameError || firstNameError || passwordError) {\n      setSaveUserError(true);\n    }\n  };\n\n  const onBlur = (input, setter) => {\n    if (input === '') {\n      setter(true);\n    }\n  };\n\n  return (\n    <>\n      {selectedUser.length === 0 && (\n        <Link to=\"/login\">\n          <button\n            className=\"form__btn centered\"\n            type=\"button\"\n          >\n            Зарегистрируйтесь\n          </button>\n        </Link>\n      )}\n\n      {selectedUser.length > 0 && (\n        <form className=\"form\">\n          <label>\n            <input\n              type=\"text\"\n              className=\"form__input\"\n              value={lastName}\n              onChange={event => setLastName(event.target.value)}\n              onBlur={() => onBlur(lastName, setLastNameError)}\n            />\n          </label>\n\n          {lastNameError && (\n            <p className=\"login-form__message\">Поле не должно быть пустым</p>\n          )}\n\n          <label>\n            <input\n              type=\"text\"\n              className=\"form__input\"\n              value={firstName}\n              onChange={event => setFirstName(event.target.value)}\n              onBlur={() => onBlur(firstName, setFirstNameError)}\n            />\n          </label>\n\n          {firstNameError && (\n            <p className=\"login-form__message\">Поле не должно быть пустым</p>\n          )}\n\n          <label>\n            <input\n              type=\"text\"\n              name=\"patronymic\"\n              className=\"form__input\"\n              placeholder=\"Отчество\"\n              value={patronymic}\n              onChange={event => setPatronymic(event.target.value)}\n            />\n          </label>\n\n          <label>\n            <input\n              type=\"text\"\n              className=\"form__input\"\n              placeholder=\"Должность\"\n              value={position}\n              onChange={event => setPosition(event.target.value)}\n            />\n          </label>\n\n          <label>\n            <input\n              type=\"text\"\n              className=\"form__input--disabled\"\n              value={getData('login')}\n              disabled=\"disabled\"\n            />\n          </label>\n\n          <label>\n            <input\n              type=\"password\"\n              className=\"form__input\"\n              value={password}\n              onChange={event => setPassword(event.target.value)}\n              onBlur={() => onBlur(password, setPasswordError)}\n            />\n          </label>\n\n          {passwordError && (\n            <p className=\"login-form__message\">Поле не должно быть пустым</p>\n          )}\n\n          <label>\n            <input\n              type=\"password\"\n              className=\"form__input\"\n              value={confirmPassword}\n              placeholder=\"Подтвердите пароль*\"\n              onChange={event => setConfirmPassword(event.target.value)}\n              required\n            />\n          </label>\n\n          {saveUserError && (\n            <p className=\"login-form__message\">\n              Заполните все обязательные поля\n            </p>\n          )}\n\n          <button\n            className=\"form__btn\"\n            type=\"button\"\n            onClick={handleFormSubmit}\n          >\n            Сохранить изменения\n          </button>\n        </form>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './UserList.scss';\n\nexport const UserList = () => {\n  const [, setIsUserDeleted] = useState(false);\n  const localUser = Object.keys(localStorage);\n\n  const removeUser = () => {\n    localStorage.clear();\n    sessionStorage.clear();\n    setIsUserDeleted(true);\n  };\n\n  return (\n    <div className=\"user-list\">\n      {localUser.length === 0 && (\n        <Link to=\"/login\">\n          <button\n            className=\"form__btn centered\"\n            type=\"button\"\n          >\n            Зарегистрируйтесь\n          </button>\n        </Link>\n      )}\n\n      {localUser.map((user) => {\n        const userData = JSON.parse(localStorage.getItem(user));\n\n        return (\n          <div className=\"user-list__list list\">\n            <p className=\"list__item\">\n              <b>Логин:&nbsp;</b>\n              {userData.login}\n            </p>\n            <p className=\"list__item\">\n              <b>Фамилия:&nbsp;</b>\n              {userData.lastName}\n            </p>\n            <p className=\"list__item\">\n              <b>Имя:&nbsp;</b>\n              {userData.firstName}\n            </p>\n            <p className=\"list__item\">\n              <b>Отчество:&nbsp;</b>\n              {userData.patronymic}\n            </p>\n            <p className=\"list__item\">\n              <b>Должность:&nbsp;</b>\n              {userData.position}\n            </p>\n            <p className=\"list__item\">\n              <b>Пароль:&nbsp;</b>\n              {userData.password}\n            </p>\n          </div>\n        );\n      })}\n\n      {localUser.length !== 0 && (\n        <button\n          type=\"button\"\n          onClick={removeUser}\n        >\n          Очистить\n        </button>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './TestForm.scss';\n\nexport const TestForm = () => {\n  const [input, setInput] = useState('');\n  const [text, setText] = useState(' ');\n\n  const saveText = (event) => {\n    setInput(event.target.value);\n  };\n\n  const displayText = (textFromFrom) => {\n    setText(textFromFrom);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setInput('');\n  };\n\n  return (\n    <>\n      <div className=\"test-form form\">\n        <h2 className=\"test-form__title\">{`Text: ${text}`}</h2>\n        <input\n          type=\"text\"\n          className=\"form__input\"\n          placeholder=\"Введите текст\"\n          value={input}\n          onChange={event => saveText(event)}\n        />\n        <button\n          type=\"button\"\n          className=\"form__btn\"\n          onClick={() => displayText(input)}\n        >\n          Отобразить\n        </button>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { MainNav } from './components/MainNav';\nimport { LoginPage } from './components/LoginPage';\nimport { RegistrationPage } from './components/RegistrationPage';\nimport { EditUser } from './components/EditUser';\nimport { UserList } from './components/UserList';\nimport { TestForm } from './components/TestForm';\n\nexport const App = () => (\n  <div>\n    {sessionStorage.getItem('selectedUser') !== null && (\n      <MainNav />\n    )}\n    <Switch>\n      <Route exact path=\"/\" component={LoginPage} />\n      <Route path=\"/login\" component={RegistrationPage} />\n      <Route path=\"/profile\" component={EditUser} />\n      <Route path=\"/userlist\" component={UserList} />\n      <Route path=\"/form\" component={TestForm} />\n      <Route render={() => <h1>404: page not found</h1>} />\n    </Switch>\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}