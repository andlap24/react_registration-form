{"version":3,"sources":["components/MainNav/MainNav.jsx","components/LoginPage/LoginPage.jsx","components/RegistrationPage/RegistrationPage.jsx","components/EditUser/EditUser.jsx","components/UserList/UserList.jsx","components/TestForm/TestForm.jsx","App.jsx","index.js"],"names":["MainNav","className","to","activeClassName","exact","LoginPage","useState","selectedUser","setSelectedUser","password","setPassword","isPasswordValid","setIsPasswordValid","passwordError","setPasswordError","localUser","Object","keys","localStorage","useEffect","resetState","checkPassword","pass","JSON","parse","getItem","defaultValue","onChange","event","target","value","handleSelectedUser","length","map","user","type","name","placeholder","onKeyPress","key","handleKeyPress","onBlur","onClick","RegistrationPage","lastName","setLastName","firstName","setFirstName","patronymic","setPatronymic","position","setPosition","login","setLogin","confirmPassword","setConfirmPassword","lastNameError","setLastNameError","firstNameError","setFirstNameError","loginError","setLoginError","addUserError","setAddUserError","input","setter","resetForm","required","setItem","stringify","EditUser","props","history","location","pathname","slice","saveUserError","setSaveUserError","getData","disabled","UserList","userData","TestForm","setInput","text","setText","saveText","App","path","component","render","ReactDOM","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.605ca4f2.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './MainNav.scss';\n\nexport const MainNav = () => (\n  <nav className=\"navbar\">\n    <div className=\"navbar-menu\">\n      <div className=\"navbar-start\">\n        <NavLink\n          to=\"/profile/\"\n          className=\"navbar-item is-tab\"\n          activeClassName=\"is-active\"\n        >\n          Мой профиль\n        </NavLink>\n\n        <NavLink\n          to=\"/userlist/\"\n          className=\"navbar-item is-tab\"\n          activeClassName=\"is-active\"\n        >\n          Пользователи\n        </NavLink>\n\n        <NavLink\n          to=\"/form/\"\n          className=\"navbar-item is-tab\"\n          activeClassName=\"is-active\"\n        >\n          Форма\n        </NavLink>\n      </div>\n\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n          <div className=\"buttons\">\n            <NavLink\n              to=\"/registration/\"\n              className=\"button is-link\"\n              activeClassName=\"is-active\"\n            >\n              Регистрация\n            </NavLink>\n\n            <NavLink\n              to=\"/\"\n              exact\n              className=\"button is-light\"\n              activeClassName=\"is-active\"\n            >\n              Вход\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport './LoginPage.scss';\n\nexport const LoginPage = () => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [password, setPassword] = useState('');\n  const [isPasswordValid, setIsPasswordValid] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const localUser = Object.keys(localStorage);\n\n  useEffect(() => {\n    resetState();\n  }, []);\n\n  const checkPassword = () => {\n    const pass = JSON.parse(localStorage.getItem(selectedUser)).password;\n\n    password === pass ? setIsPasswordValid(true) : setIsPasswordValid(false);\n  };\n\n  const handleSelectedUser = event => (\n    setSelectedUser(event.target.value)\n  );\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      checkPassword();\n    }\n  };\n\n  const onBlur = (input) => {\n    if (input === '') {\n      setPasswordError(true);\n    }\n  };\n\n  const resetState = () => {\n    setIsPasswordValid(false);\n    setSelectedUser('');\n    setPassword('');\n  };\n\n  return (\n\n    <div className=\"login-page\">\n      <form\n        className=\"login-page__form login-form\"\n      >\n        <select\n          className=\"login-form__select\"\n          defaultValue=\"Choose a user\"\n          onChange={(event) => {\n            handleSelectedUser(event);\n          }}\n        >\n          <option value=\"Choose a user\">Выберите пользователя</option>\n          {localUser.length > 0\n              && localUser.map(user => (\n                <option\n                  key={user}\n                  value={user}\n                >\n                  {user}\n                </option>\n              ))}\n        </select>\n\n        {localUser.length > 0\n          && (\n            <label>\n              <input\n                className=\"login-form__password\"\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                placeholder=\"Пароль\"\n                onChange={event => setPassword(event.target.value)}\n                onKeyPress={event => handleKeyPress(event)}\n                onBlur={() => onBlur(password)}\n              />\n            </label>\n          )}\n\n        {passwordError && (\n          <p className=\"login-form__message\">Введите пароль</p>\n        )}\n\n        {localUser.length > 0\n          ? (\n            <button\n              className=\"login-form__btn\"\n              type=\"button\"\n              onClick={checkPassword}\n            >\n              Войти\n            </button>\n          )\n          : (\n            <Link to=\"registration/\">\n              <button\n                className=\"form__btn\"\n                type=\"button\"\n              >\n                Регистрация\n              </button>\n            </Link>\n          )\n        }\n      </form>\n      {isPasswordValid\n        && (\n          <Redirect to={`profile/:${selectedUser}`} />\n        )\n      }\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './RegistrationPage.scss';\n\nexport const RegistrationPage = () => {\n  const [lastName, setLastName] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [patronymic, setPatronymic] = useState('');\n  const [position, setPosition] = useState('');\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [lastNameError, setLastNameError] = useState(false);\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [loginError, setLoginError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [addUserError, setAddUserError] = useState(false);\n\n  const handleFormSubmit = () => {\n    const localUser = {\n      lastName,\n      firstName,\n      patronymic,\n      position,\n      login,\n      password,\n    };\n\n    if (password === confirmPassword && lastName !== '' && login !== '') {\n      localStorage.setItem(`${login}`, JSON.stringify(localUser));\n      resetForm();\n    }\n\n    if (loginError === true) {\n      setAddUserError(true);\n    }\n  };\n\n  const onBlur = (input, setter) => {\n    if (input === '') {\n      setter(true);\n    }\n  };\n\n  const addTestUser = () => {\n    setLastName('Dumbledore');\n    setFirstName('Albus');\n    setPatronymic('Percival Wulfric Brian');\n    setPosition('Headmaster of Hogwarts School');\n    setLogin('Dumbly-dorr');\n    setPassword('123');\n    setConfirmPassword('123');\n  };\n\n  const resetForm = () => {\n    setLastName('');\n    setFirstName('');\n    setPatronymic('');\n    setPosition('');\n    setLogin('');\n    setPassword('');\n    setConfirmPassword('');\n    setLastNameError(false);\n    setFirstNameError(false);\n    setLoginError(false);\n    setPasswordError(false);\n    setAddUserError(false);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <form className=\"form\">\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={lastName}\n            placeholder=\"Фамилия*\"\n            onChange={event => setLastName(event.target.value)}\n            onBlur={() => onBlur(lastName, setLastNameError)}\n          />\n        </label>\n\n        {lastNameError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={firstName}\n            placeholder=\"Имя*\"\n            onChange={event => setFirstName(event.target.value)}\n            onBlur={() => onBlur(firstName, setFirstNameError)}\n          />\n        </label>\n\n        {firstNameError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"patronymic\"\n            className=\"form__input\"\n            value={patronymic}\n            placeholder=\"Отчество\"\n            onChange={event => setPatronymic(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={position}\n            placeholder=\"Должность\"\n            onChange={event => setPosition(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={login}\n            placeholder=\"Логин*\"\n            onChange={event => setLogin(event.target.value)}\n            onBlur={() => onBlur(login, setLoginError)}\n          />\n        </label>\n\n        {loginError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"password\"\n            className=\"form__input\"\n            value={password}\n            placeholder=\"Пароль*\"\n            onChange={event => setPassword(event.target.value)}\n            onBlur={() => onBlur(password, setPasswordError)}\n          />\n        </label>\n\n        {passwordError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"password\"\n            className=\"form__input\"\n            value={confirmPassword}\n            placeholder=\"Подтвердите пароль*\"\n            onChange={event => setConfirmPassword(event.target.value)}\n            required\n          />\n        </label>\n\n        {addUserError && (\n          <p className=\"login-form__message\">Заполните все обязательные поля</p>\n        )}\n\n        <button\n          className=\"form__btn\"\n          type=\"button\"\n          onClick={handleFormSubmit}\n        >\n          Добавить\n        </button>\n        <button\n          className=\"form__btn\"\n          type=\"button\"\n          onClick={addTestUser}\n        >\n          Test user\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './EditUser.scss';\n\nexport const EditUser = (props) => {\n  const selectedUser = props.history.location.pathname.slice(10);\n  const [lastName, setLastName] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [patronymic, setPatronymic] = useState('');\n  const [position, setPosition] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [lastNameError, setLastNameError] = useState(false);\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [saveUserError, setSaveUserError] = useState(false);\n\n  useEffect(() => {\n    setLastName(getData('lastName'));\n    setFirstName(getData('firstName'));\n    setPassword(getData('password'));\n  }, []);\n\n  const getData = (value) => {\n    const data = JSON.parse(localStorage.getItem(selectedUser));\n\n    return data[value];\n  };\n\n  const handleFormSubmit = () => {\n    const localUser = {\n      lastName,\n      firstName,\n      patronymic,\n      position,\n      password,\n    };\n\n    if (password === confirmPassword && lastName !== '') {\n      const login = getData('login');\n\n      localStorage.setItem(`${login}`, JSON.stringify(localUser));\n    }\n\n    if (lastNameError || firstNameError || passwordError) {\n      setSaveUserError(true);\n    }\n  };\n\n  const onBlur = (input, setter) => {\n    if (input === '') {\n      setter(true);\n    }\n  };\n\n  return (\n    <>\n      {selectedUser.length === 0 && (\n        <Link to=\"registration/\">\n          <button\n            className=\"form__btn centered\"\n            type=\"button\"\n          >\n            Зарегистрируйтесь\n          </button>\n        </Link>\n      )}\n\n      {selectedUser.length > 0 && (\n        <form className=\"form\">\n          <label>\n            <input\n              type=\"text\"\n              className=\"form__input\"\n              value={lastName}\n              onChange={event => setLastName(event.target.value)}\n              onBlur={() => onBlur(lastName, setLastNameError)}\n            />\n          </label>\n\n          {lastNameError && (\n            <p className=\"login-form__message\">Поле не должно быть пустым</p>\n          )}\n\n          <label>\n            <input\n              type=\"text\"\n              className=\"form__input\"\n              value={firstName}\n              onChange={event => setFirstName(event.target.value)}\n              onBlur={() => onBlur(firstName, setFirstNameError)}\n            />\n          </label>\n\n          {firstNameError && (\n            <p className=\"login-form__message\">Поле не должно быть пустым</p>\n          )}\n\n          <label>\n            <input\n              type=\"text\"\n              name=\"patronymic\"\n              className=\"form__input\"\n              placeholder=\"Отчество\"\n              value={patronymic}\n              onChange={event => setPatronymic(event.target.value)}\n            />\n          </label>\n\n          <label>\n            <input\n              type=\"text\"\n              className=\"form__input\"\n              placeholder=\"Должность\"\n              value={position}\n              onChange={event => setPosition(event.target.value)}\n            />\n          </label>\n\n          <label>\n            <input\n              type=\"text\"\n              className=\"form__input--disabled\"\n              value={getData('login')}\n              disabled=\"disabled\"\n            />\n          </label>\n\n          <label>\n            <input\n              type=\"password\"\n              className=\"form__input\"\n              value={password}\n              onChange={event => setPassword(event.target.value)}\n              onBlur={() => onBlur(password, setPasswordError)}\n            />\n          </label>\n\n          {passwordError && (\n            <p className=\"login-form__message\">Поле не должно быть пустым</p>\n          )}\n\n          <label>\n            <input\n              type=\"password\"\n              className=\"form__input\"\n              value={confirmPassword}\n              placeholder=\"Подтвердите пароль*\"\n              onChange={event => setConfirmPassword(event.target.value)}\n              required\n            />\n          </label>\n\n          {saveUserError && (\n            <p className=\"login-form__message\">\n              Заполните все обязательные поля\n            </p>\n          )}\n\n          <button\n            className=\"form__btn\"\n            type=\"button\"\n            onClick={handleFormSubmit}\n          >\n            Сохранить изменения\n          </button>\n        </form>\n      )}\n    </>\n  );\n};\n\nEditUser.propTypes = {\n  history: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './UserList.scss';\n\nexport const UserList = () => {\n  const localUser = Object.keys(localStorage);\n\n  return (\n    <div className=\"user-list\">\n      {localUser.length === 0 && (\n        <Link to=\"registration/\">\n          <button\n            className=\"form__btn centered\"\n            type=\"button\"\n          >\n            Зарегистрируйтесь\n          </button>\n        </Link>\n      )}\n\n      {localUser.map((user) => {\n        const userData = JSON.parse(localStorage.getItem(user));\n\n        return (\n          <div className=\"user-list__list list\">\n            <p className=\"list__item\">\n              <b>Логин:&nbsp;</b>\n              {userData.login}\n            </p>\n            <p className=\"list__item\">\n              <b>Фамилия:&nbsp;</b>\n              {userData.lastName}\n            </p>\n            <p className=\"list__item\">\n              <b>Имя:&nbsp;</b>\n              {userData.firstName}\n            </p>\n            <p className=\"list__item\">\n              <b>Отчество:&nbsp;</b>\n              {userData.patronymic}\n            </p>\n            <p className=\"list__item\">\n              <b>Должность:&nbsp;</b>\n              {userData.position}\n            </p>\n            <p className=\"list__item\">\n              <b>Пароль:&nbsp;</b>\n              {userData.password}\n            </p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './TestForm.scss';\n\nexport const TestForm = () => {\n  const [input, setInput] = useState('');\n  const [text, setText] = useState(' ');\n\n  const saveText = (event) => {\n    setInput(event.target.value);\n  };\n\n  const displayText = (textFromFrom) => {\n    setText(textFromFrom);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setInput('');\n  };\n\n  return (\n    <>\n      <div className=\"test-form form\">\n        <h2 className=\"test-form__title\">{`Text: ${text}`}</h2>\n        <input\n          type=\"text\"\n          className=\"form__input\"\n          placeholder=\"Введите текст\"\n          value={input}\n          onChange={event => saveText(event)}\n        />\n        <button\n          type=\"button\"\n          className=\"form__btn\"\n          onClick={() => displayText(input)}\n        >\n          Отобразить\n        </button>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { MainNav } from './components/MainNav';\nimport { LoginPage } from './components/LoginPage';\nimport { RegistrationPage } from './components/RegistrationPage';\nimport { EditUser } from './components/EditUser';\nimport { UserList } from './components/UserList';\nimport { TestForm } from './components/TestForm';\n\nexport const App = () => (\n  <div>\n    <MainNav />\n    <Switch>\n      <Route path=\"/registration\" component={RegistrationPage} />\n      <Route path=\"/userlist\" component={UserList} />\n      <Route path=\"/profile\" component={EditUser} />\n      <Route path=\"/form\" component={TestForm} />\n      <Route path=\"/\" component={LoginPage} />\n      <Route render={() => <h1>404: page not found</h1>} />\n    </Switch>\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}