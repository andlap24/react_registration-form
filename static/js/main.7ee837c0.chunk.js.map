{"version":3,"sources":["pages/UserAuthPage/UserAuthPage.jsx","components/NavBar/NavBar.jsx","pages/EditUser/EditUser.jsx","pages/UserListPage/UserListPage.jsx","pages/TestFormPage/TestFormPage.jsx","pages/UserProfilePage/UserProfilePage.jsx","pages/RegistrationPage/RegistrationPage.jsx","App.jsx","index.js"],"names":["UserAuthPage","useState","selectedUser","setSelectedUser","password","setPassword","isPasswordValid","setIsPasswordValid","passwordError","setPasswordError","localUser","Object","keys","localStorage","useEffect","resetState","checkPassword","enteredPassword","JSON","parse","getItem","sessionStorage","setItem","className","defaultValue","onChange","event","target","value","handleSelectedUser","length","map","user","type","name","placeholder","onKeyPress","key","handleKeyPress","onBlur","onClick","to","NavBar","activeClassName","exact","EditUser","lastName","setLastName","firstName","setFirstName","patronymic","setPatronymic","position","setPosition","confirmPassword","setConfirmPassword","lastNameError","setLastNameError","firstNameError","setFirstNameError","saveUserError","setSaveUserError","getData","input","setter","disabled","required","login","stringify","UserListPage","setIsUserDeleted","userData","clear","TestFormPage","setInput","text","setText","resetForm","saveText","UserProfilePage","path","component","RegistrationPage","setLogin","loginError","setLoginError","addUserError","setAddUserError","App","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.7ee837c0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport './UserAuthPage.scss';\n\nexport const UserAuthPage = () => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [password, setPassword] = useState('');\n  const [isPasswordValid, setIsPasswordValid] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n\n  const localUser = Object.keys(localStorage);\n\n  useEffect(() => {\n    resetState();\n  }, []);\n\n  const checkPassword = () => {\n    // eslint-disable-next-line max-len\n    const enteredPassword = JSON.parse(localStorage.getItem(selectedUser)).password;\n\n    password === enteredPassword\n      ? setIsPasswordValid(true)\n      : setIsPasswordValid(false);\n\n    sessionStorage.setItem('selectedUser', selectedUser);\n  };\n\n  const handleSelectedUser = event => (\n    setSelectedUser(event.target.value)\n  );\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      checkPassword();\n    }\n  };\n\n  const onBlur = (input) => {\n    if (input === '') {\n      setPasswordError(true);\n    }\n  };\n\n  const resetState = () => {\n    setIsPasswordValid(false);\n    setSelectedUser('');\n    setPassword('');\n  };\n\n  return (\n    <div className=\"login-page\">\n      <form\n        className=\"login-page__form login-form\"\n      >\n        <select\n          className=\"login-form__select\"\n          defaultValue=\"Choose a user\"\n          onChange={(event) => {\n            handleSelectedUser(event);\n          }}\n        >\n          <option value=\"Choose a user\">Выберите пользователя</option>\n          {localUser.length > 0\n              && localUser.map(user => (\n                <option\n                  key={user}\n                  value={user}\n                >\n                  {user}\n                </option>\n              ))}\n        </select>\n\n        {localUser.length > 0\n          && (\n            <label>\n              <input\n                className=\"login-form__password\"\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                placeholder=\"Пароль\"\n                onChange={event => setPassword(event.target.value)}\n                onKeyPress={event => handleKeyPress(event)}\n                onBlur={() => onBlur(password)}\n              />\n            </label>\n          )}\n\n        {passwordError && (\n          <p className=\"login-form__message\">Введите пароль</p>\n        )}\n\n        {isPasswordValid && (\n          <p className=\"login-form__message\">Неверный пароль</p>\n        )}\n\n        {localUser.length > 0\n          ? (\n            <button\n              className=\"login-form__btn\"\n              type=\"button\"\n              onClick={checkPassword}\n            >\n              Войти\n            </button>\n          )\n          : (\n            <Link to=\"/signup\">\n              <button\n                className=\"form__btn\"\n                type=\"button\"\n              >\n                Регистрация\n              </button>\n            </Link>\n          )\n        }\n      </form>\n      {isPasswordValid\n        && (\n          <Redirect to=\"/home/profile\" />\n        )\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './NavBar.scss';\n\nexport const NavBar = () => (\n  <nav className=\"navbar\">\n    <div className=\"navbar-menu\">\n      <div className=\"navbar-start\">\n        <NavLink\n          to=\"/home/profile\"\n          className=\"navbar-item is-tab\"\n          activeClassName=\"is-active\"\n        >\n          Мой профиль\n        </NavLink>\n\n        <NavLink\n          to=\"/home/userlist\"\n          className=\"navbar-item is-tab\"\n          activeClassName=\"is-active\"\n        >\n          Пользователи\n        </NavLink>\n\n        <NavLink\n          to=\"/home/form\"\n          className=\"navbar-item is-tab\"\n          activeClassName=\"is-active\"\n        >\n          Форма\n        </NavLink>\n      </div>\n\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n          <div className=\"buttons\">\n            <NavLink\n              to=\"/signup\"\n              className=\"button is-link\"\n              activeClassName=\"is-active\"\n            >\n              Регистрация\n            </NavLink>\n\n            <NavLink\n              to=\"/\"\n              exact\n              className=\"button is-light\"\n              activeClassName=\"is-active\"\n            >\n              Вход\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './EditUser.scss';\n\nexport const EditUser = () => {\n  const selectedUser = sessionStorage.getItem('selectedUser');\n  const [lastName, setLastName] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [patronymic, setPatronymic] = useState('');\n  const [position, setPosition] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [lastNameError, setLastNameError] = useState(false);\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [saveUserError, setSaveUserError] = useState(false);\n\n  useEffect(() => {\n    setLastName(getData('lastName'));\n    setFirstName(getData('firstName'));\n    setPassword(getData('password'));\n  }, []);\n\n  const getData = (value) => {\n    const data = JSON.parse(localStorage.getItem(selectedUser));\n\n    return data[value];\n  };\n\n  const handleFormSubmit = () => {\n    const localUser = {\n      lastName,\n      firstName,\n      patronymic,\n      position,\n      password,\n    };\n\n    if (password === confirmPassword && lastName !== '') {\n      const login = getData('login');\n\n      localStorage.setItem(`${login}`, JSON.stringify(localUser));\n    }\n\n    if (lastNameError || firstNameError || passwordError) {\n      setSaveUserError(true);\n    }\n  };\n\n  const onBlur = (input, setter) => {\n    if (input === '') {\n      setter(true);\n    }\n  };\n\n  return (\n    <>\n      {selectedUser.length === 0 && (\n        <Link to=\"/signup\">\n          <button\n            className=\"form__btn centered\"\n            type=\"button\"\n          >\n            Зарегистрируйтесь\n          </button>\n        </Link>\n      )}\n      <form className=\"form\">\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={lastName}\n            onChange={event => setLastName(event.target.value)}\n            onBlur={() => onBlur(lastName, setLastNameError)}\n          />\n        </label>\n\n        {lastNameError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={firstName}\n            onChange={event => setFirstName(event.target.value)}\n            onBlur={() => onBlur(firstName, setFirstNameError)}\n          />\n        </label>\n\n        {firstNameError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"patronymic\"\n            className=\"form__input\"\n            placeholder=\"Отчество\"\n            value={patronymic}\n            onChange={event => setPatronymic(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            placeholder=\"Должность\"\n            value={position}\n            onChange={event => setPosition(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input--disabled\"\n            value={getData('login')}\n            disabled=\"disabled\"\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"password\"\n            className=\"form__input\"\n            value={password}\n            onChange={event => setPassword(event.target.value)}\n            onBlur={() => onBlur(password, setPasswordError)}\n          />\n        </label>\n\n        {passwordError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"password\"\n            className=\"form__input\"\n            value={confirmPassword}\n            placeholder=\"Подтвердите пароль*\"\n            onChange={event => setConfirmPassword(event.target.value)}\n            required\n          />\n        </label>\n\n        {saveUserError && (\n          <p className=\"login-form__message\">\n            Заполните все обязательные поля\n          </p>\n        )}\n\n        <button\n          className=\"form__btn\"\n          type=\"button\"\n          onClick={handleFormSubmit}\n        >\n          Сохранить изменения\n        </button>\n      </form>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './UserListPage.scss';\n\nexport const UserListPage = () => {\n  const [, setIsUserDeleted] = useState(false);\n  const localUser = Object.keys(localStorage);\n\n  const removeUser = () => {\n    localStorage.clear();\n    sessionStorage.clear();\n    setIsUserDeleted(true);\n  };\n\n  return (\n    <>\n      <div className=\"user-list\">\n        {localUser.length === 0 && (\n          <Link to=\"/signup\">\n            <button\n              className=\"form__btn centered\"\n              type=\"button\"\n            >\n              Зарегистрируйтесь\n            </button>\n          </Link>\n        )}\n\n        {localUser.map((user) => {\n          const userData = JSON.parse(localStorage.getItem(user));\n\n          return (\n            <div className=\"user-list__list list\">\n              <p className=\"list__item\">\n                <b>Логин:&nbsp;</b>\n                {userData.login}\n              </p>\n              <p className=\"list__item\">\n                <b>Фамилия:&nbsp;</b>\n                {userData.lastName}\n              </p>\n              <p className=\"list__item\">\n                <b>Имя:&nbsp;</b>\n                {userData.firstName}\n              </p>\n              <p className=\"list__item\">\n                <b>Отчество:&nbsp;</b>\n                {userData.patronymic}\n              </p>\n              <p className=\"list__item\">\n                <b>Должность:&nbsp;</b>\n                {userData.position}\n              </p>\n              <p className=\"list__item\">\n                <b>Пароль:&nbsp;</b>\n                {userData.password}\n              </p>\n            </div>\n          );\n        })}\n\n        {localUser.length !== 0 && (\n          <Link to=\"/signup\">\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={removeUser}\n            >\n              Очистить\n            </button>\n          </Link>\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './TestFormPage.scss';\n\nexport const TestFormPage = () => {\n  const [input, setInput] = useState('');\n  const [text, setText] = useState(' ');\n\n  const saveText = (event) => {\n    setInput(event.target.value);\n  };\n\n  const displayText = (textFromFrom) => {\n    setText(textFromFrom);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setInput('');\n  };\n\n  return (\n    <>\n      <div className=\"test-form form\">\n        <h2 className=\"test-form__title\">{`Text: ${text}`}</h2>\n        <input\n          type=\"text\"\n          className=\"form__input\"\n          placeholder=\"Введите текст\"\n          value={input}\n          onChange={event => saveText(event)}\n        />\n        <button\n          type=\"button\"\n          className=\"form__btn\"\n          onClick={() => displayText(input)}\n        >\n          Отобразить\n        </button>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { NavBar } from '../../components/NavBar';\nimport { EditUser } from '../EditUser';\nimport { UserListPage } from '../UserListPage';\nimport { TestFormPage } from '../TestFormPage';\n\nexport const UserProfilePage = () => (\n  <>\n    <NavBar />\n    <Switch>\n      <Route path=\"/home/profile\" component={EditUser} />\n      <Route path=\"/home/userlist\" component={UserListPage} />\n      <Route path=\"/home/form\" component={TestFormPage} />\n    </Switch>\n  </>\n);\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './RegistrationPage.scss';\n\nexport const RegistrationPage = () => {\n  const [lastName, setLastName] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [patronymic, setPatronymic] = useState('');\n  const [position, setPosition] = useState('');\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [lastNameError, setLastNameError] = useState(false);\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [loginError, setLoginError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [addUserError, setAddUserError] = useState(false);\n\n  const handleFormSubmit = () => {\n    const localUser = {\n      lastName,\n      firstName,\n      patronymic,\n      position,\n      login,\n      password,\n    };\n\n    if (password === confirmPassword && lastName !== '' && login !== '') {\n      localStorage.setItem(`${login}`, JSON.stringify(localUser));\n      resetForm();\n    }\n\n    if (loginError === true) {\n      setAddUserError(true);\n    }\n  };\n\n  const onBlur = (input, setter) => {\n    if (input === '') {\n      setter(true);\n    }\n  };\n\n  const addTestUser = () => {\n    setLastName('Dumbledore');\n    setFirstName('Albus');\n    setPatronymic('Percival Wulfric Brian');\n    setPosition('Headmaster of Hogwarts School');\n    setLogin('Dumbly-dorr');\n    setPassword('123');\n    setConfirmPassword('123');\n  };\n\n  const resetForm = () => {\n    setLastName('');\n    setFirstName('');\n    setPatronymic('');\n    setPosition('');\n    setLogin('');\n    setPassword('');\n    setConfirmPassword('');\n    setLastNameError(false);\n    setFirstNameError(false);\n    setLoginError(false);\n    setPasswordError(false);\n    setAddUserError(false);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <form className=\"form\">\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={lastName}\n            placeholder=\"Фамилия*\"\n            onChange={event => setLastName(event.target.value)}\n            onBlur={() => onBlur(lastName, setLastNameError)}\n          />\n        </label>\n\n        {lastNameError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={firstName}\n            placeholder=\"Имя*\"\n            onChange={event => setFirstName(event.target.value)}\n            onBlur={() => onBlur(firstName, setFirstNameError)}\n          />\n        </label>\n\n        {firstNameError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"patronymic\"\n            className=\"form__input\"\n            value={patronymic}\n            placeholder=\"Отчество\"\n            onChange={event => setPatronymic(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={position}\n            placeholder=\"Должность\"\n            onChange={event => setPosition(event.target.value)}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={login}\n            placeholder=\"Логин*\"\n            onChange={event => setLogin(event.target.value)}\n            onBlur={() => onBlur(login, setLoginError)}\n          />\n        </label>\n\n        {loginError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"password\"\n            className=\"form__input\"\n            value={password}\n            placeholder=\"Пароль*\"\n            onChange={event => setPassword(event.target.value)}\n            onBlur={() => onBlur(password, setPasswordError)}\n          />\n        </label>\n\n        {passwordError && (\n          <p className=\"login-form__message\">Поле не должно быть пустым</p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            value={confirmPassword}\n            placeholder=\"Подтвердите пароль*\"\n            onChange={event => setConfirmPassword(event.target.value)}\n            required\n          />\n        </label>\n\n        {addUserError && (\n          <p className=\"login-form__message\">Заполните все обязательные поля</p>\n        )}\n\n        <Link to=\"/\">\n          <button\n            className=\"form__btn\"\n            type=\"button\"\n            onClick={handleFormSubmit}\n          >\n            Добавить\n          </button>\n        </Link>\n        <button\n          className=\"form__btn\"\n          type=\"button\"\n          onClick={addTestUser}\n        >\n          Test user\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { UserAuthPage } from './pages/UserAuthPage';\nimport { UserProfilePage } from './pages/UserProfilePage';\nimport { RegistrationPage } from './pages/RegistrationPage';\n\nexport const App = () => (\n  <Switch>\n    <Route path=\"/home\" component={UserProfilePage} />\n    <Route path=\"/signup\" component={RegistrationPage} />\n    <Route path=\"/\" exact component={UserAuthPage} />\n  </Switch>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}